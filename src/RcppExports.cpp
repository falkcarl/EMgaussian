// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// imp1matsigma
arma::mat imp1matsigma(Rcpp::NumericMatrix D, const arma::colvec muest, const arma::mat sigest);
RcppExport SEXP _EMgaussian_imp1matsigma(SEXP DSEXP, SEXP muestSEXP, SEXP sigestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< const arma::colvec >::type muest(muestSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type sigest(sigestSEXP);
    rcpp_result_gen = Rcpp::wrap(imp1matsigma(D, muest, sigest));
    return rcpp_result_gen;
END_RCPP
}
// imp2matsigma
void imp2matsigma(Rcpp::NumericMatrix D, const arma::mat sigest, arma::mat t2);
RcppExport SEXP _EMgaussian_imp2matsigma(SEXP DSEXP, SEXP sigestSEXP, SEXP t2SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type sigest(sigestSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type t2(t2SEXP);
    imp2matsigma(D, sigest, t2);
    return R_NilValue;
END_RCPP
}
// EMcyclecov
Rcpp::List EMcyclecov(const Rcpp::NumericMatrix D, const arma::colvec muest, const arma::mat sigest);
RcppExport SEXP _EMgaussian_EMcyclecov(SEXP DSEXP, SEXP muestSEXP, SEXP sigestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< const arma::colvec >::type muest(muestSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type sigest(sigestSEXP);
    rcpp_result_gen = Rcpp::wrap(EMcyclecov(D, muest, sigest));
    return rcpp_result_gen;
END_RCPP
}
// nllcov
double nllcov(const arma::mat d, const arma::colvec muest, const arma::mat sigest, int np);
RcppExport SEXP _EMgaussian_nllcov(SEXP dSEXP, SEXP muestSEXP, SEXP sigestSEXP, SEXP npSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type d(dSEXP);
    Rcpp::traits::input_parameter< const arma::colvec >::type muest(muestSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type sigest(sigestSEXP);
    Rcpp::traits::input_parameter< int >::type np(npSEXP);
    rcpp_result_gen = Rcpp::wrap(nllcov(d, muest, sigest, np));
    return rcpp_result_gen;
END_RCPP
}
// imp1mat
arma::mat imp1mat(Rcpp::NumericMatrix D, const arma::colvec muest, const arma::mat kest);
RcppExport SEXP _EMgaussian_imp1mat(SEXP DSEXP, SEXP muestSEXP, SEXP kestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< const arma::colvec >::type muest(muestSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type kest(kestSEXP);
    rcpp_result_gen = Rcpp::wrap(imp1mat(D, muest, kest));
    return rcpp_result_gen;
END_RCPP
}
// imp2mat
void imp2mat(const arma::mat d, const arma::mat kest, arma::mat t2);
RcppExport SEXP _EMgaussian_imp2mat(SEXP dSEXP, SEXP kestSEXP, SEXP t2SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type d(dSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type kest(kestSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type t2(t2SEXP);
    imp2mat(d, kest, t2);
    return R_NilValue;
END_RCPP
}
// nllprec
double nllprec(const arma::mat d, const arma::colvec muest, const arma::mat kest, int np);
RcppExport SEXP _EMgaussian_nllprec(SEXP dSEXP, SEXP muestSEXP, SEXP kestSEXP, SEXP npSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type d(dSEXP);
    Rcpp::traits::input_parameter< const arma::colvec >::type muest(muestSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type kest(kestSEXP);
    Rcpp::traits::input_parameter< int >::type np(npSEXP);
    rcpp_result_gen = Rcpp::wrap(nllprec(d, muest, kest, np));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_EMgaussian_imp1matsigma", (DL_FUNC) &_EMgaussian_imp1matsigma, 3},
    {"_EMgaussian_imp2matsigma", (DL_FUNC) &_EMgaussian_imp2matsigma, 3},
    {"_EMgaussian_EMcyclecov", (DL_FUNC) &_EMgaussian_EMcyclecov, 3},
    {"_EMgaussian_nllcov", (DL_FUNC) &_EMgaussian_nllcov, 4},
    {"_EMgaussian_imp1mat", (DL_FUNC) &_EMgaussian_imp1mat, 3},
    {"_EMgaussian_imp2mat", (DL_FUNC) &_EMgaussian_imp2mat, 3},
    {"_EMgaussian_nllprec", (DL_FUNC) &_EMgaussian_nllprec, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_EMgaussian(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
