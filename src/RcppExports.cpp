// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// imp1matsigma
arma::mat imp1matsigma(Rcpp::NumericMatrix D, Rcpp::NumericVector Muest, Rcpp::NumericMatrix Sigest);
RcppExport SEXP _EMgaussian_imp1matsigma(SEXP DSEXP, SEXP MuestSEXP, SEXP SigestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Muest(MuestSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Sigest(SigestSEXP);
    rcpp_result_gen = Rcpp::wrap(imp1matsigma(D, Muest, Sigest));
    return rcpp_result_gen;
END_RCPP
}
// imp2matsigma
void imp2matsigma(Rcpp::NumericMatrix D, Rcpp::NumericMatrix Sigest, Rcpp::NumericMatrix T2);
RcppExport SEXP _EMgaussian_imp2matsigma(SEXP DSEXP, SEXP SigestSEXP, SEXP T2SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Sigest(SigestSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type T2(T2SEXP);
    imp2matsigma(D, Sigest, T2);
    return R_NilValue;
END_RCPP
}
// nllmvn
double nllmvn(Rcpp::NumericMatrix D, Rcpp::NumericVector Muest, Rcpp::NumericMatrix Sigest, int np);
RcppExport SEXP _EMgaussian_nllmvn(SEXP DSEXP, SEXP MuestSEXP, SEXP SigestSEXP, SEXP npSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Muest(MuestSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Sigest(SigestSEXP);
    Rcpp::traits::input_parameter< int >::type np(npSEXP);
    rcpp_result_gen = Rcpp::wrap(nllmvn(D, Muest, Sigest, np));
    return rcpp_result_gen;
END_RCPP
}
// imp1mat
arma::mat imp1mat(Rcpp::NumericMatrix D, Rcpp::NumericVector Muest, Rcpp::NumericMatrix Kest);
RcppExport SEXP _EMgaussian_imp1mat(SEXP DSEXP, SEXP MuestSEXP, SEXP KestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Muest(MuestSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Kest(KestSEXP);
    rcpp_result_gen = Rcpp::wrap(imp1mat(D, Muest, Kest));
    return rcpp_result_gen;
END_RCPP
}
// imp2mat
void imp2mat(Rcpp::NumericMatrix D, Rcpp::NumericMatrix Kest, Rcpp::NumericMatrix T2);
RcppExport SEXP _EMgaussian_imp2mat(SEXP DSEXP, SEXP KestSEXP, SEXP T2SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Kest(KestSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type T2(T2SEXP);
    imp2mat(D, Kest, T2);
    return R_NilValue;
END_RCPP
}
// nllggm
double nllggm(Rcpp::NumericMatrix D, Rcpp::NumericVector Muest, Rcpp::NumericMatrix Kest, int np);
RcppExport SEXP _EMgaussian_nllggm(SEXP DSEXP, SEXP MuestSEXP, SEXP KestSEXP, SEXP npSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Muest(MuestSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Kest(KestSEXP);
    Rcpp::traits::input_parameter< int >::type np(npSEXP);
    rcpp_result_gen = Rcpp::wrap(nllggm(D, Muest, Kest, np));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_EMgaussian_imp1matsigma", (DL_FUNC) &_EMgaussian_imp1matsigma, 3},
    {"_EMgaussian_imp2matsigma", (DL_FUNC) &_EMgaussian_imp2matsigma, 3},
    {"_EMgaussian_nllmvn", (DL_FUNC) &_EMgaussian_nllmvn, 4},
    {"_EMgaussian_imp1mat", (DL_FUNC) &_EMgaussian_imp1mat, 3},
    {"_EMgaussian_imp2mat", (DL_FUNC) &_EMgaussian_imp2mat, 3},
    {"_EMgaussian_nllggm", (DL_FUNC) &_EMgaussian_nllggm, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_EMgaussian(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
